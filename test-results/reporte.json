{
	"id": "16b1716b-1177-4322-83ca-6fc652aba932",
	"name": "SuscriApp",
	"timestamp": "2025-06-30T05:42:17.831Z",
	"collection_id": "27060984-f43277bf-682b-4e0c-b934-f76604d833d6",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 159,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-06-30T05:42:07.861Z",
	"totalFail": 13,
	"results": [
		{
			"id": "f61fdeea-005d-42f7-8318-50674fb44055",
			"name": "createUser-succes",
			"url": "http://localhost:4000/api/v1/auth/sign-up",
			"time": 439,
			"responseCode": {
				"code": 409,
				"name": "Conflict"
			},
			"tests": {
				"El código de estado debe ser 201 Created": false,
				"El campo 'success' debe ser true": false,
				"El mensaje debe ser 'Usuario creado exitosamente'": false,
				"La respuesta debe contener un token y los datos del usuario": false,
				"El token no debe ser nulo o vacío": false
			},
			"testPassFailCounts": {
				"El código de estado debe ser 201 Created": {
					"pass": 0,
					"fail": 1
				},
				"El campo 'success' debe ser true": {
					"pass": 0,
					"fail": 1
				},
				"El mensaje debe ser 'Usuario creado exitosamente'": {
					"pass": 0,
					"fail": 1
				},
				"La respuesta debe contener un token y los datos del usuario": {
					"pass": 0,
					"fail": 1
				},
				"El token no debe ser nulo o vacío": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				439
			],
			"allTests": [
				{
					"El código de estado debe ser 201 Created": false,
					"El campo 'success' debe ser true": false,
					"El mensaje debe ser 'Usuario creado exitosamente'": false,
					"La respuesta debe contener un token y los datos del usuario": false,
					"El token no debe ser nulo o vacío": false
				}
			]
		},
		{
			"id": "eea041d5-cd54-4ffd-b0db-b220db665e19",
			"name": "createUser-invalid-emails",
			"url": "http://localhost:4000/api/v1/auth/sign-up",
			"time": 101,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400": true,
				"El campo 'success' debe ser false": true,
				"El mensaje de error debe ser 'Formato de email invalido'": true,
				"El statusCode en el cuerpo del error debe ser 400": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400": {
					"pass": 1,
					"fail": 0
				},
				"El campo 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error debe ser 'Formato de email invalido'": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode en el cuerpo del error debe ser 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"El código de estado debe ser 400": true,
					"El campo 'success' debe ser false": true,
					"El mensaje de error debe ser 'Formato de email invalido'": true,
					"El statusCode en el cuerpo del error debe ser 400": true
				}
			]
		},
		{
			"id": "ce3a782e-ad5f-4fb7-aa02-8b1e43318514",
			"name": "createUser-empty-fields",
			"url": "http://localhost:4000/api/v1/auth/sign-up",
			"time": 99,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400": true,
				"El campo 'success' debe ser false": true,
				"El mensaje de error debe ser 'Todos los campos son obligatorios'": true,
				"El statusCode en el cuerpo del error debe ser 400": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400": {
					"pass": 1,
					"fail": 0
				},
				"El campo 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error debe ser 'Todos los campos son obligatorios'": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode en el cuerpo del error debe ser 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"El código de estado debe ser 400": true,
					"El campo 'success' debe ser false": true,
					"El mensaje de error debe ser 'Todos los campos son obligatorios'": true,
					"El statusCode en el cuerpo del error debe ser 400": true
				}
			]
		},
		{
			"id": "0c95f765-d4c7-49fe-a1cd-0004f6a7dc63",
			"name": "login-succes",
			"url": "http://localhost:4000/api/v1/auth/sign-in",
			"time": 264,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"La respuesta debe ser 200 OK": true,
				"La respuesta debe incluir un token de autenticación": true,
				"El token no debe ser nulo o vacío": true
			},
			"testPassFailCounts": {
				"La respuesta debe ser 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe incluir un token de autenticación": {
					"pass": 1,
					"fail": 0
				},
				"El token no debe ser nulo o vacío": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				264
			],
			"allTests": [
				{
					"La respuesta debe ser 200 OK": true,
					"La respuesta debe incluir un token de autenticación": true,
					"El token no debe ser nulo o vacío": true
				}
			]
		},
		{
			"id": "eec077a8-2491-453b-b847-21cd3a434e52",
			"name": "login-error-credentials",
			"url": "http://localhost:4000/api/v1/auth/sign-in",
			"time": 266,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"El código de estado debe ser 401": true,
				"El campo 'success' debe ser false": true,
				"El mensaje de error debe ser 'Usuario o contraseña incorrectos'": true,
				"El statusCode en el cuerpo del error debe ser 401": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 401": {
					"pass": 1,
					"fail": 0
				},
				"El campo 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error debe ser 'Usuario o contraseña incorrectos'": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode en el cuerpo del error debe ser 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				266
			],
			"allTests": [
				{
					"El código de estado debe ser 401": true,
					"El campo 'success' debe ser false": true,
					"El mensaje de error debe ser 'Usuario o contraseña incorrectos'": true,
					"El statusCode en el cuerpo del error debe ser 401": true
				}
			]
		},
		{
			"id": "00feb5c9-5e87-421e-9cb0-fe085af1bcc5",
			"name": "login-error-empty-fields",
			"url": "http://localhost:4000/api/v1/auth/sign-in",
			"time": 101,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400": true,
				"El campo 'success' debe ser false": true,
				"El mensaje de error debe ser 'Email y contraseña son obligatorios'": true,
				"El statusCode en el cuerpo del error debe ser 400": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400": {
					"pass": 1,
					"fail": 0
				},
				"El campo 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error debe ser 'Email y contraseña son obligatorios'": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode en el cuerpo del error debe ser 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				101
			],
			"allTests": [
				{
					"El código de estado debe ser 400": true,
					"El campo 'success' debe ser false": true,
					"El mensaje de error debe ser 'Email y contraseña son obligatorios'": true,
					"El statusCode en el cuerpo del error debe ser 400": true
				}
			]
		},
		{
			"id": "9e5c8137-6644-47a3-9a14-8e8d5acc21ca",
			"name": "createSubscription-succes",
			"url": "http://localhost:4000/api/v1/subscriptions",
			"time": 365,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"El código de estado debe ser 201 Created": true,
				"La operación debe ser exitosa y tener el mensaje correcto": true,
				"El objeto 'data' debe existir y la suscripción debe tener un _id": true,
				"Los campos clave de la suscripción deben tener el tipo de dato correcto": true,
				"Los datos de la suscripción creada deben coincidir con los datos enviados": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 201 Created": {
					"pass": 1,
					"fail": 0
				},
				"La operación debe ser exitosa y tener el mensaje correcto": {
					"pass": 1,
					"fail": 0
				},
				"El objeto 'data' debe existir y la suscripción debe tener un _id": {
					"pass": 1,
					"fail": 0
				},
				"Los campos clave de la suscripción deben tener el tipo de dato correcto": {
					"pass": 1,
					"fail": 0
				},
				"Los datos de la suscripción creada deben coincidir con los datos enviados": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				365
			],
			"allTests": [
				{
					"El código de estado debe ser 201 Created": true,
					"La operación debe ser exitosa y tener el mensaje correcto": true,
					"El objeto 'data' debe existir y la suscripción debe tener un _id": true,
					"Los campos clave de la suscripción deben tener el tipo de dato correcto": true,
					"Los datos de la suscripción creada deben coincidir con los datos enviados": true
				}
			]
		},
		{
			"id": "0901c96d-a23b-45f7-a6e2-08a1927128ba",
			"name": "createSubscription-error-invalid-fields",
			"url": "http://localhost:4000/api/v1/subscriptions",
			"time": 185,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400 y 'success' debe ser false": true,
				"El mensaje principal debe indicar un error de validación general": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400 y 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje principal debe indicar un error de validación general": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				185
			],
			"allTests": [
				{
					"El código de estado debe ser 400 y 'success' debe ser false": true,
					"El mensaje principal debe indicar un error de validación general": true
				}
			]
		},
		{
			"id": "bc478b1f-b446-422a-b2e0-9064cd1d25ce",
			"name": "getUsers-success",
			"url": "http://localhost:4000/api/v1/users",
			"time": 351,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado debe ser 200 OK": true,
				"La operación debe ser exitosa ('success' es true)": true,
				"La respuesta debe contener una propiedad 'data' que sea un array": true,
				"La lista de usuarios no debería estar vacía": true,
				"Usuario #1: Debe tener una estructura válida": true,
				"Usuario #2: Debe tener una estructura válida": true,
				"Usuario #3: Debe tener una estructura válida": true,
				"Usuario #4: Debe tener una estructura válida": true,
				"Usuario #5: Debe tener una estructura válida": true,
				"Usuario #6: Debe tener una estructura válida": true,
				"Usuario #7: Debe tener una estructura válida": true,
				"Usuario #8: Debe tener una estructura válida": true,
				"Usuario #9: Debe tener una estructura válida": true,
				"Usuario #10: Debe tener una estructura válida": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"La operación debe ser exitosa ('success' es true)": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener una propiedad 'data' que sea un array": {
					"pass": 1,
					"fail": 0
				},
				"La lista de usuarios no debería estar vacía": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #1: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #2: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #3: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #4: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #5: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #6: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #7: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #8: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #9: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Usuario #10: Debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				351
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK": true,
					"La operación debe ser exitosa ('success' es true)": true,
					"La respuesta debe contener una propiedad 'data' que sea un array": true,
					"La lista de usuarios no debería estar vacía": true,
					"Usuario #1: Debe tener una estructura válida": true,
					"Usuario #2: Debe tener una estructura válida": true,
					"Usuario #3: Debe tener una estructura válida": true,
					"Usuario #4: Debe tener una estructura válida": true,
					"Usuario #5: Debe tener una estructura válida": true,
					"Usuario #6: Debe tener una estructura válida": true,
					"Usuario #7: Debe tener una estructura válida": true,
					"Usuario #8: Debe tener una estructura válida": true,
					"Usuario #9: Debe tener una estructura válida": true,
					"Usuario #10: Debe tener una estructura válida": true
				}
			]
		},
		{
			"id": "e9e027fa-a4b1-42d2-8867-b6f63b1aa0d9",
			"name": "deleteUsers-success",
			"url": "http://localhost:4000/api/v1/users/6860fa54f10963bfca5491f2",
			"time": 272,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado es 200": true,
				"La respuesta indica éxito ('success: true')": true,
				"El mensaje es 'Usuario eliminado exitosamente'": true
			},
			"testPassFailCounts": {
				"El código de estado es 200": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta indica éxito ('success: true')": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje es 'Usuario eliminado exitosamente'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				272
			],
			"allTests": [
				{
					"El código de estado es 200": true,
					"La respuesta indica éxito ('success: true')": true,
					"El mensaje es 'Usuario eliminado exitosamente'": true
				}
			]
		},
		{
			"id": "0f6570ee-9dfd-498f-9a0f-39f0ba96a648",
			"name": "deleteUsers-error-invalid-id",
			"url": "http://localhost:4000/api/v1/users/asdasdasdas",
			"time": 186,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado es 400": true,
				"La propiedad 'success' es false": true,
				"La respuesta contiene un objeto 'error'": true,
				"El mensaje de error es 'ID de usuario no válido'": true,
				"El statusCode dentro del JSON es 400": true
			},
			"testPassFailCounts": {
				"El código de estado es 400": {
					"pass": 1,
					"fail": 0
				},
				"La propiedad 'success' es false": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta contiene un objeto 'error'": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error es 'ID de usuario no válido'": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode dentro del JSON es 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				186
			],
			"allTests": [
				{
					"El código de estado es 400": true,
					"La propiedad 'success' es false": true,
					"La respuesta contiene un objeto 'error'": true,
					"El mensaje de error es 'ID de usuario no válido'": true,
					"El statusCode dentro del JSON es 400": true
				}
			]
		},
		{
			"id": "fd2254ee-28a0-4138-896a-d5ef66e25671",
			"name": "putUsers-success",
			"url": "http://localhost:4000/api/v1/users/6860fa54f10963bfca5491f2",
			"time": 273,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"El código de estado es 200": false,
				"La respuesta tiene la propiedad 'success' en true": false,
				"El mensaje es 'Usuario actualizado exitosamente'": false,
				"La respuesta contiene el objeto 'data' con la información del usuario": false,
				"El objeto 'data' contiene _id, email y updatedAt": false
			},
			"testPassFailCounts": {
				"El código de estado es 200": {
					"pass": 0,
					"fail": 1
				},
				"La respuesta tiene la propiedad 'success' en true": {
					"pass": 0,
					"fail": 1
				},
				"El mensaje es 'Usuario actualizado exitosamente'": {
					"pass": 0,
					"fail": 1
				},
				"La respuesta contiene el objeto 'data' con la información del usuario": {
					"pass": 0,
					"fail": 1
				},
				"El objeto 'data' contiene _id, email y updatedAt": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				273
			],
			"allTests": [
				{
					"El código de estado es 200": false,
					"La respuesta tiene la propiedad 'success' en true": false,
					"El mensaje es 'Usuario actualizado exitosamente'": false,
					"La respuesta contiene el objeto 'data' con la información del usuario": false,
					"El objeto 'data' contiene _id, email y updatedAt": false
				}
			]
		},
		{
			"id": "18584c83-be59-46b0-b089-39cf97475103",
			"name": "putUsers-error-empty-fields",
			"url": "http://localhost:4000/api/v1/users/6860fa54f10963bfca5491f2",
			"time": 186,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado es 400": true,
				"La propiedad 'success' es false": true,
				"La respuesta contiene un objeto 'error'": true,
				"El mensaje de error es 'El nombre es obligatorio'": true,
				"El statusCode dentro del JSON es 400": true
			},
			"testPassFailCounts": {
				"El código de estado es 400": {
					"pass": 1,
					"fail": 0
				},
				"La propiedad 'success' es false": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta contiene un objeto 'error'": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error es 'El nombre es obligatorio'": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode dentro del JSON es 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				186
			],
			"allTests": [
				{
					"El código de estado es 400": true,
					"La propiedad 'success' es false": true,
					"La respuesta contiene un objeto 'error'": true,
					"El mensaje de error es 'El nombre es obligatorio'": true,
					"El statusCode dentro del JSON es 400": true
				}
			]
		},
		{
			"id": "f9027f1a-bbf7-4ce4-b62c-d064e875972d",
			"name": "getUserById-success",
			"url": "http://localhost:4000/api/v1/users/6855e76b5bdb035e3d5def04",
			"time": 269,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado debe ser 200 OK": true,
				"La operación debe ser exitosa ('success' es true)": true,
				"La respuesta debe contener un único objeto 'data'": true,
				"El usuario debe tener las propiedades y tipos de datos correctos": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"La operación debe ser exitosa ('success' es true)": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener un único objeto 'data'": {
					"pass": 1,
					"fail": 0
				},
				"El usuario debe tener las propiedades y tipos de datos correctos": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				269
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK": true,
					"La operación debe ser exitosa ('success' es true)": true,
					"La respuesta debe contener un único objeto 'data'": true,
					"El usuario debe tener las propiedades y tipos de datos correctos": true
				}
			]
		},
		{
			"id": "28fbd7c0-0193-4552-b1d0-c33eb344919d",
			"name": "getUserById-error-invalid-id",
			"url": "http://localhost:4000/api/v1/users/6855e76b5bdb",
			"time": 186,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400 Bad Request": true,
				"El campo 'success' debe ser false": true,
				"El mensaje de error debe ser 'ID de usuario no válido'": true,
				"El statusCode en el cuerpo del error debe ser 400": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400 Bad Request": {
					"pass": 1,
					"fail": 0
				},
				"El campo 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error debe ser 'ID de usuario no válido'": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode en el cuerpo del error debe ser 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				186
			],
			"allTests": [
				{
					"El código de estado debe ser 400 Bad Request": true,
					"El campo 'success' debe ser false": true,
					"El mensaje de error debe ser 'ID de usuario no válido'": true,
					"El statusCode en el cuerpo del error debe ser 400": true
				}
			]
		},
		{
			"id": "cc6bd082-7cab-4d1c-bce7-e9463aadd330",
			"name": "getSuscriptionsUserById-succes",
			"url": "http://localhost:4000/api/v1/subscriptions/users/6855e76b5bdb035e3d5def04",
			"time": 357,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado debe ser 200 OK": true,
				"La operación debe ser exitosa ('success' es true)": true,
				"La respuesta debe contener una propiedad 'data' que sea un array": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"La operación debe ser exitosa ('success' es true)": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener una propiedad 'data' que sea un array": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				357
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK": true,
					"La operación debe ser exitosa ('success' es true)": true,
					"La respuesta debe contener una propiedad 'data' que sea un array": true
				}
			]
		},
		{
			"id": "37d469ee-9203-484c-a268-f175422f26df",
			"name": "getSuscriptionsUserById-error-invalid-id",
			"url": "http://localhost:4000/api/v1/subscriptions/users/6855e76b5bdb035e3d5sdsdef04",
			"time": 186,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400 y success debe ser false": true,
				"El mensaje principal debe indicar un error de validación": true,
				"La respuesta debe contener un array 'details' con un solo error": true,
				"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400 y success debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje principal debe indicar un error de validación": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener un array 'details' con un solo error": {
					"pass": 1,
					"fail": 0
				},
				"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				186
			],
			"allTests": [
				{
					"El código de estado debe ser 400 y success debe ser false": true,
					"El mensaje principal debe indicar un error de validación": true,
					"La respuesta debe contener un array 'details' con un solo error": true,
					"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": true
				}
			]
		},
		{
			"id": "f4897eb8-8812-492a-a340-5d56f0498aae",
			"name": "getSusbciptions-succes",
			"url": "http://localhost:4000/api/v1/subscriptions",
			"time": 448,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado debe ser 200 OK": true,
				"La operación debe ser exitosa ('success' es true)": true,
				"La respuesta debe contener una lista 'data' y un objeto 'pagination'": true,
				"La lista de suscripciones no debería estar vacía": true,
				"Item #1: La suscripción tiene una estructura válida": true,
				"Item #2: La suscripción tiene una estructura válida": true,
				"Item #3: La suscripción tiene una estructura válida": true,
				"Item #4: La suscripción tiene una estructura válida": true,
				"Item #5: La suscripción tiene una estructura válida": true,
				"Item #6: La suscripción tiene una estructura válida": true,
				"Item #7: La suscripción tiene una estructura válida": true,
				"Item #8: La suscripción tiene una estructura válida": true,
				"Item #9: La suscripción tiene una estructura válida": true,
				"Item #10: La suscripción tiene una estructura válida": true,
				"El objeto de paginación tiene una estructura válida": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"La operación debe ser exitosa ('success' es true)": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener una lista 'data' y un objeto 'pagination'": {
					"pass": 1,
					"fail": 0
				},
				"La lista de suscripciones no debería estar vacía": {
					"pass": 1,
					"fail": 0
				},
				"Item #1: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #2: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #3: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #4: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #5: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #6: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #7: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #8: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #9: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #10: La suscripción tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"El objeto de paginación tiene una estructura válida": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				448
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK": true,
					"La operación debe ser exitosa ('success' es true)": true,
					"La respuesta debe contener una lista 'data' y un objeto 'pagination'": true,
					"La lista de suscripciones no debería estar vacía": true,
					"Item #1: La suscripción tiene una estructura válida": true,
					"Item #2: La suscripción tiene una estructura válida": true,
					"Item #3: La suscripción tiene una estructura válida": true,
					"Item #4: La suscripción tiene una estructura válida": true,
					"Item #5: La suscripción tiene una estructura válida": true,
					"Item #6: La suscripción tiene una estructura válida": true,
					"Item #7: La suscripción tiene una estructura válida": true,
					"Item #8: La suscripción tiene una estructura válida": true,
					"Item #9: La suscripción tiene una estructura válida": true,
					"Item #10: La suscripción tiene una estructura válida": true,
					"El objeto de paginación tiene una estructura válida": true
				}
			]
		},
		{
			"id": "244160f5-db24-4a12-8b45-5bf2b281d20d",
			"name": "getSusbciptionsById-succes",
			"url": "http://localhost:4000/api/v1/subscriptions/6860fd6ef10963bfca549205",
			"time": 360,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado debe ser 200 OK": true,
				"La operación debe ser exitosa ('success' es true)": true,
				"La respuesta debe contener un único objeto 'data'": true,
				"La suscripción debe tener las propiedades y tipos de datos correctos": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"La operación debe ser exitosa ('success' es true)": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener un único objeto 'data'": {
					"pass": 1,
					"fail": 0
				},
				"La suscripción debe tener las propiedades y tipos de datos correctos": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				360
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK": true,
					"La operación debe ser exitosa ('success' es true)": true,
					"La respuesta debe contener un único objeto 'data'": true,
					"La suscripción debe tener las propiedades y tipos de datos correctos": true
				}
			]
		},
		{
			"id": "04fb46d6-797e-4a10-9289-f4711e2f9dab",
			"name": "getSusbciptionsById-error-invalid-id",
			"url": "http://localhost:4000/api/v1/subscriptions/6860fd6ef10963bghg05",
			"time": 191,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400 y 'success' debe ser false": true,
				"El mensaje principal debe indicar un error de validación": true,
				"El array 'details' debe contener un único error": true,
				"El detalle del error debe corresponder al campo 'id'": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400 y 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje principal debe indicar un error de validación": {
					"pass": 1,
					"fail": 0
				},
				"El array 'details' debe contener un único error": {
					"pass": 1,
					"fail": 0
				},
				"El detalle del error debe corresponder al campo 'id'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				191
			],
			"allTests": [
				{
					"El código de estado debe ser 400 y 'success' debe ser false": true,
					"El mensaje principal debe indicar un error de validación": true,
					"El array 'details' debe contener un único error": true,
					"El detalle del error debe corresponder al campo 'id'": true
				}
			]
		},
		{
			"id": "bd8e502a-7188-4876-89d7-26fa4e1c1925",
			"name": "getSusbciptions-error-empty-token",
			"url": "http://localhost:4000/api/v1/subscriptions",
			"time": 98,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"El código de estado debe ser 401 Unauthorized": true,
				"El campo 'success' debe ser false": true,
				"El mensaje de error debe indicar que el token no fue proporcionado": true,
				"El statusCode en el cuerpo del error debe ser 401": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 401 Unauthorized": {
					"pass": 1,
					"fail": 0
				},
				"El campo 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error debe indicar que el token no fue proporcionado": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode en el cuerpo del error debe ser 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"El código de estado debe ser 401 Unauthorized": true,
					"El campo 'success' debe ser false": true,
					"El mensaje de error debe indicar que el token no fue proporcionado": true,
					"El statusCode en el cuerpo del error debe ser 401": true
				}
			]
		},
		{
			"id": "26ce40b0-6a69-4861-8d8e-35e5ae34b493",
			"name": "getSusbciptions-error-invalid-token",
			"url": "http://localhost:4000/api/v1/subscriptions",
			"time": 102,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"El código de estado debe ser 401 Unauthorized": true,
				"El campo 'success' debe ser false": true,
				"El mensaje de error debe indicar que el token es inválido": true,
				"El statusCode en el cuerpo del error debe ser 401": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 401 Unauthorized": {
					"pass": 1,
					"fail": 0
				},
				"El campo 'success' debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje de error debe indicar que el token es inválido": {
					"pass": 1,
					"fail": 0
				},
				"El statusCode en el cuerpo del error debe ser 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"El código de estado debe ser 401 Unauthorized": true,
					"El campo 'success' debe ser false": true,
					"El mensaje de error debe indicar que el token es inválido": true,
					"El statusCode en el cuerpo del error debe ser 401": true
				}
			]
		},
		{
			"id": "2802d9d5-2617-4406-a620-60a333fd15fa",
			"name": "getSubscription-renewal-succes",
			"url": "http://localhost:4000/api/v1/subscriptions/user/upcoming-renewals",
			"time": 359,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado debe ser 200 OK": true,
				"La operación debe ser exitosa ('success' es true)": true,
				"La respuesta debe contener una propiedad 'data' que sea un array": true,
				"Item #1: La suscripción debe tener una estructura válida": true,
				"Item #2: La suscripción debe tener una estructura válida": true,
				"Item #3: La suscripción debe tener una estructura válida": true,
				"Item #4: La suscripción debe tener una estructura válida": true,
				"Item #5: La suscripción debe tener una estructura válida": true,
				"Item #6: La suscripción debe tener una estructura válida": true,
				"Item #7: La suscripción debe tener una estructura válida": true,
				"Item #8: La suscripción debe tener una estructura válida": true,
				"Item #9: La suscripción debe tener una estructura válida": true,
				"Item #10: La suscripción debe tener una estructura válida": true,
				"Item #11: La suscripción debe tener una estructura válida": true,
				"Item #12: La suscripción debe tener una estructura válida": true,
				"Item #13: La suscripción debe tener una estructura válida": true,
				"Item #14: La suscripción debe tener una estructura válida": true,
				"Item #15: La suscripción debe tener una estructura válida": true,
				"Item #16: La suscripción debe tener una estructura válida": true,
				"Item #17: La suscripción debe tener una estructura válida": true,
				"Item #18: La suscripción debe tener una estructura válida": true,
				"Item #19: La suscripción debe tener una estructura válida": true,
				"Item #20: La suscripción debe tener una estructura válida": true,
				"Item #21: La suscripción debe tener una estructura válida": true,
				"Item #22: La suscripción debe tener una estructura válida": true,
				"Item #23: La suscripción debe tener una estructura válida": true,
				"Item #24: La suscripción debe tener una estructura válida": true,
				"Item #25: La suscripción debe tener una estructura válida": true,
				"Item #26: La suscripción debe tener una estructura válida": true,
				"Item #27: La suscripción debe tener una estructura válida": true,
				"Item #28: La suscripción debe tener una estructura válida": true,
				"Item #29: La suscripción debe tener una estructura válida": true,
				"Item #30: La suscripción debe tener una estructura válida": true,
				"Item #31: La suscripción debe tener una estructura válida": true,
				"Item #32: La suscripción debe tener una estructura válida": true,
				"Item #33: La suscripción debe tener una estructura válida": true,
				"Item #34: La suscripción debe tener una estructura válida": true,
				"Item #35: La suscripción debe tener una estructura válida": true,
				"Item #36: La suscripción debe tener una estructura válida": true,
				"Item #37: La suscripción debe tener una estructura válida": true,
				"Item #38: La suscripción debe tener una estructura válida": true,
				"Item #39: La suscripción debe tener una estructura válida": true,
				"Item #40: La suscripción debe tener una estructura válida": true,
				"Item #41: La suscripción debe tener una estructura válida": true,
				"Item #42: La suscripción debe tener una estructura válida": true,
				"Item #43: La suscripción debe tener una estructura válida": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK": {
					"pass": 1,
					"fail": 0
				},
				"La operación debe ser exitosa ('success' es true)": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener una propiedad 'data' que sea un array": {
					"pass": 1,
					"fail": 0
				},
				"Item #1: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #2: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #3: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #4: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #5: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #6: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #7: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #8: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #9: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #10: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #11: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #12: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #13: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #14: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #15: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #16: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #17: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #18: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #19: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #20: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #21: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #22: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #23: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #24: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #25: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #26: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #27: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #28: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #29: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #30: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #31: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #32: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #33: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #34: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #35: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #36: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #37: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #38: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #39: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #40: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #41: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #42: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				},
				"Item #43: La suscripción debe tener una estructura válida": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				359
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK": true,
					"La operación debe ser exitosa ('success' es true)": true,
					"La respuesta debe contener una propiedad 'data' que sea un array": true,
					"Item #1: La suscripción debe tener una estructura válida": true,
					"Item #2: La suscripción debe tener una estructura válida": true,
					"Item #3: La suscripción debe tener una estructura válida": true,
					"Item #4: La suscripción debe tener una estructura válida": true,
					"Item #5: La suscripción debe tener una estructura válida": true,
					"Item #6: La suscripción debe tener una estructura válida": true,
					"Item #7: La suscripción debe tener una estructura válida": true,
					"Item #8: La suscripción debe tener una estructura válida": true,
					"Item #9: La suscripción debe tener una estructura válida": true,
					"Item #10: La suscripción debe tener una estructura válida": true,
					"Item #11: La suscripción debe tener una estructura válida": true,
					"Item #12: La suscripción debe tener una estructura válida": true,
					"Item #13: La suscripción debe tener una estructura válida": true,
					"Item #14: La suscripción debe tener una estructura válida": true,
					"Item #15: La suscripción debe tener una estructura válida": true,
					"Item #16: La suscripción debe tener una estructura válida": true,
					"Item #17: La suscripción debe tener una estructura válida": true,
					"Item #18: La suscripción debe tener una estructura válida": true,
					"Item #19: La suscripción debe tener una estructura válida": true,
					"Item #20: La suscripción debe tener una estructura válida": true,
					"Item #21: La suscripción debe tener una estructura válida": true,
					"Item #22: La suscripción debe tener una estructura válida": true,
					"Item #23: La suscripción debe tener una estructura válida": true,
					"Item #24: La suscripción debe tener una estructura válida": true,
					"Item #25: La suscripción debe tener una estructura válida": true,
					"Item #26: La suscripción debe tener una estructura válida": true,
					"Item #27: La suscripción debe tener una estructura válida": true,
					"Item #28: La suscripción debe tener una estructura válida": true,
					"Item #29: La suscripción debe tener una estructura válida": true,
					"Item #30: La suscripción debe tener una estructura válida": true,
					"Item #31: La suscripción debe tener una estructura válida": true,
					"Item #32: La suscripción debe tener una estructura válida": true,
					"Item #33: La suscripción debe tener una estructura válida": true,
					"Item #34: La suscripción debe tener una estructura válida": true,
					"Item #35: La suscripción debe tener una estructura válida": true,
					"Item #36: La suscripción debe tener una estructura válida": true,
					"Item #37: La suscripción debe tener una estructura válida": true,
					"Item #38: La suscripción debe tener una estructura válida": true,
					"Item #39: La suscripción debe tener una estructura válida": true,
					"Item #40: La suscripción debe tener una estructura válida": true,
					"Item #41: La suscripción debe tener una estructura válida": true,
					"Item #42: La suscripción debe tener una estructura válida": true,
					"Item #43: La suscripción debe tener una estructura válida": true
				}
			]
		},
		{
			"id": "ce1d28ca-f79d-4039-9022-abe5668cb043",
			"name": "getSuscriptions-user-stats-succes",
			"url": "http://localhost:4000/api/v1/subscriptions/user/stats",
			"time": 500,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado debe ser 200 OK y 'success' debe ser true": true,
				"El objeto 'data' debe contener todas las estadísticas con tipos de dato numéricos": true,
				"Las estadísticas deben ser lógicamente consistentes": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK y 'success' debe ser true": {
					"pass": 1,
					"fail": 0
				},
				"El objeto 'data' debe contener todas las estadísticas con tipos de dato numéricos": {
					"pass": 1,
					"fail": 0
				},
				"Las estadísticas deben ser lógicamente consistentes": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				500
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK y 'success' debe ser true": true,
					"El objeto 'data' debe contener todas las estadísticas con tipos de dato numéricos": true,
					"Las estadísticas deben ser lógicamente consistentes": true
				}
			]
		},
		{
			"id": "39d11de5-c7e7-4d8e-9971-6208122d7a94",
			"name": "updateSusbciptionById-succes",
			"url": "http://localhost:4000/api/v1/subscriptions/6861ab1653595349e192fc3f",
			"time": 456,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"El código de estado debe ser 200 OK y el mensaje correcto": true,
				"Los datos actualizados en la respuesta deben coincidir con los datos enviados en el Body": true,
				"La fecha 'updatedAt' debe ser posterior o igual a la fecha 'createdAt'": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK y el mensaje correcto": {
					"pass": 1,
					"fail": 0
				},
				"Los datos actualizados en la respuesta deben coincidir con los datos enviados en el Body": {
					"pass": 1,
					"fail": 0
				},
				"La fecha 'updatedAt' debe ser posterior o igual a la fecha 'createdAt'": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				456
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK y el mensaje correcto": true,
					"Los datos actualizados en la respuesta deben coincidir con los datos enviados en el Body": true,
					"La fecha 'updatedAt' debe ser posterior o igual a la fecha 'createdAt'": true
				}
			]
		},
		{
			"id": "bc2f0f32-65ce-4c32-8f09-74e8d2eea624",
			"name": "updateSusbciptionById-error-invalid-id",
			"url": "http://localhost:4000/api/v1/subscriptions/68579ab4f968ae79bcd8",
			"time": 187,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400 y success debe ser false": true,
				"El mensaje principal debe indicar un error de validación": true,
				"La respuesta debe contener un array 'details' con un solo error": true,
				"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400 y success debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje principal debe indicar un error de validación": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener un array 'details' con un solo error": {
					"pass": 1,
					"fail": 0
				},
				"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				187
			],
			"allTests": [
				{
					"El código de estado debe ser 400 y success debe ser false": true,
					"El mensaje principal debe indicar un error de validación": true,
					"La respuesta debe contener un array 'details' con un solo error": true,
					"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": true
				}
			]
		},
		{
			"id": "985eb2ed-67ab-490e-869c-0999d7a0eef9",
			"name": "deleteSusbciptionById-succes",
			"url": "http://localhost:4000/api/v1/subscriptions/6861b5006d3a708601edab28",
			"time": 275,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"El código de estado debe ser 200 OK": false,
				"La operación debe ser exitosa ('success' es true)": false,
				"El mensaje debe confirmar la eliminación exitosa": false
			},
			"testPassFailCounts": {
				"El código de estado debe ser 200 OK": {
					"pass": 0,
					"fail": 1
				},
				"La operación debe ser exitosa ('success' es true)": {
					"pass": 0,
					"fail": 1
				},
				"El mensaje debe confirmar la eliminación exitosa": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				275
			],
			"allTests": [
				{
					"El código de estado debe ser 200 OK": false,
					"La operación debe ser exitosa ('success' es true)": false,
					"El mensaje debe confirmar la eliminación exitosa": false
				}
			]
		},
		{
			"id": "ece4acb6-5d3a-426c-8ab8-3029cb86c503",
			"name": "deleteSusbciptionById-error-invalid-id",
			"url": "http://localhost:4000/api/v1/subscriptions/6861036cf10963bfcasdsd",
			"time": 183,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"El código de estado debe ser 400 y success debe ser false": true,
				"El mensaje principal debe indicar un error de validación": true,
				"La respuesta debe contener un array 'details' con un solo error": true,
				"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": true
			},
			"testPassFailCounts": {
				"El código de estado debe ser 400 y success debe ser false": {
					"pass": 1,
					"fail": 0
				},
				"El mensaje principal debe indicar un error de validación": {
					"pass": 1,
					"fail": 0
				},
				"La respuesta debe contener un array 'details' con un solo error": {
					"pass": 1,
					"fail": 0
				},
				"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				183
			],
			"allTests": [
				{
					"El código de estado debe ser 400 y success debe ser false": true,
					"El mensaje principal debe indicar un error de validación": true,
					"La respuesta debe contener un array 'details' con un solo error": true,
					"El detalle del error debe ser para el campo 'id' y tener el mensaje correcto": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 7245,
	"collection": {
		"requests": [
			{
				"id": "f61fdeea-005d-42f7-8318-50674fb44055",
				"method": "POST"
			},
			{
				"id": "eea041d5-cd54-4ffd-b0db-b220db665e19",
				"method": "POST"
			},
			{
				"id": "ce3a782e-ad5f-4fb7-aa02-8b1e43318514",
				"method": "POST"
			},
			{
				"id": "0c95f765-d4c7-49fe-a1cd-0004f6a7dc63",
				"method": "POST"
			},
			{
				"id": "eec077a8-2491-453b-b847-21cd3a434e52",
				"method": "POST"
			},
			{
				"id": "00feb5c9-5e87-421e-9cb0-fe085af1bcc5",
				"method": "POST"
			},
			{
				"id": "9e5c8137-6644-47a3-9a14-8e8d5acc21ca",
				"method": "POST"
			},
			{
				"id": "0901c96d-a23b-45f7-a6e2-08a1927128ba",
				"method": "POST"
			},
			{
				"id": "bc478b1f-b446-422a-b2e0-9064cd1d25ce",
				"method": "GET"
			},
			{
				"id": "e9e027fa-a4b1-42d2-8867-b6f63b1aa0d9",
				"method": "DELETE"
			},
			{
				"id": "0f6570ee-9dfd-498f-9a0f-39f0ba96a648",
				"method": "DELETE"
			},
			{
				"id": "fd2254ee-28a0-4138-896a-d5ef66e25671",
				"method": "PUT"
			},
			{
				"id": "18584c83-be59-46b0-b089-39cf97475103",
				"method": "PUT"
			},
			{
				"id": "f9027f1a-bbf7-4ce4-b62c-d064e875972d",
				"method": "GET"
			},
			{
				"id": "28fbd7c0-0193-4552-b1d0-c33eb344919d",
				"method": "GET"
			},
			{
				"id": "cc6bd082-7cab-4d1c-bce7-e9463aadd330",
				"method": "GET"
			},
			{
				"id": "37d469ee-9203-484c-a268-f175422f26df",
				"method": "GET"
			},
			{
				"id": "f4897eb8-8812-492a-a340-5d56f0498aae",
				"method": "GET"
			},
			{
				"id": "244160f5-db24-4a12-8b45-5bf2b281d20d",
				"method": "GET"
			},
			{
				"id": "04fb46d6-797e-4a10-9289-f4711e2f9dab",
				"method": "GET"
			},
			{
				"id": "bd8e502a-7188-4876-89d7-26fa4e1c1925",
				"method": "GET"
			},
			{
				"id": "26ce40b0-6a69-4861-8d8e-35e5ae34b493",
				"method": "GET"
			},
			{
				"id": "2802d9d5-2617-4406-a620-60a333fd15fa",
				"method": "GET"
			},
			{
				"id": "ce1d28ca-f79d-4039-9022-abe5668cb043",
				"method": "GET"
			},
			{
				"id": "39d11de5-c7e7-4d8e-9971-6208122d7a94",
				"method": "PUT"
			},
			{
				"id": "bc2f0f32-65ce-4c32-8f09-74e8d2eea624",
				"method": "PUT"
			},
			{
				"id": "985eb2ed-67ab-490e-869c-0999d7a0eef9",
				"method": "DELETE"
			},
			{
				"id": "ece4acb6-5d3a-426c-8ab8-3029cb86c503",
				"method": "DELETE"
			}
		]
	}
}